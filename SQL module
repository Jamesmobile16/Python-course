import sqlalchemy
import sqlalchemy as sq
from sqlalchemy.orm import declarative_base, relationship, sessionmaker

Base = declarative_base()

class Publisher(Base):
    __tablename__ = "publisher"

    id = sq.Column(sq.Integer, primary_key=True)
    name = sq.Column(sq.String(length=40), unique=True)

class Book(Base):
    __tablename__ = "book"

    id = sq.Column(sq.Integer, primary_key=True)
    title = sq.Column(sq.String(length=60))
    publisher_id = sq.Column(sq.Integer, sq.ForeignKey("publisher.id"), nullable=False)
    publisher = relationship(Publisher, backref="books")

class Shop(Base):
    __tablename__ = "shop"

    id = sq.Column(sq.Integer, primary_key=True)
    name = sq.Column(sq.String(length=40), unique=True)

class Stock(Base):
    __tablename__ = "stock"

    id = sq.Column(sq.Integer, primary_key=True)
    book_id = sq.Column(sq.Integer, sq.ForeignKey("book.id"), nullable=False)
    shop_id = sq.Column(sq.Integer, sq.ForeignKey("shop.id"), nullable=False)
    quantity = sq.Column(sq.Integer)
    book = relationship(Book, backref="stocks")
    shop = relationship(Shop, backref="stocks")

class Sale(Base):
    __tablename__ = "sale"

    id = sq.Column(sq.Integer, primary_key=True)
    price = sq.Column(sq.Integer, nullable=False)
    date_sale = sq.Column(sq.Date, nullable=False)
    stock_id = sq.Column(sq.Integer, sq.ForeignKey("stock.id"), nullable=False)
    quantity = sq.Column(sq.Integer)
    stock = relationship(Stock, backref="sales")


if __name__ == "__main__":

    def create_tables(engine):
        # Base.metadata.drop_all(engine)
        Base.metadata.create_all(engine)

    DSN = "postgresql://postgres:__password___@localhost:5432/___database_name___"
    engine = sqlalchemy.create_engine(DSN)
    create_tables(engine)

    Session = sessionmaker(bind=engine)
    session = Session()

    publisher1 = Publisher(name="Robert Ludlum")
    book1 = Book(title="The Bourne Identity", publisher_id=1)
    shop1 = Shop(name="Дом Книги")
    stock1 = Stock(book_id=1, shop_id=1, quantity=3)
    sale1 = Sale(price=1500, date_sale="2018-10-25", stock_id=1, quantity=2)

    publisher2 = Publisher(name="Jeremy Clarkson")
    book2 = Book(title="The World According to Clarkson", publisher_id=2)
    shop2 = Shop(name="Библио Глобус")
    stock2 = Stock(book_id=2, shop_id=2, quantity=5)
    sale2 = Sale(price=1300, date_sale="2020-05-15", stock_id=2, quantity=2)

    book3 = Book(title="What could possibly go wrong", publisher_id=2)
    stock3 = Stock(book_id=3, shop_id=2, quantity=3)
    sale3 = Sale(price=1250, date_sale="2022-03-20", stock_id=3, quantity=1)


    session.add_all([publisher1, book1, shop1, stock1, sale1])
    session.add_all([publisher2, book2, shop2, stock2, sale2])
    session.add_all([book3, stock3, sale3])
    session.commit()

    a = input("Введите имя издателя: ")
    q1 = session.query(Publisher.name)
    l = list()
    for c in q1.all():
        l.append(c[0])
    if a in l:
        q = session.query(Publisher.name, Book.title, Shop.name, Sale.price, Sale.date_sale) \
            .join(Book, Publisher.id == Book.publisher_id) \
            .join(Stock, Stock.book_id == Book.id) \
            .join(Shop, Shop.id == Stock.shop_id) \
            .join(Sale, Sale.stock_id == Stock.id) \
            .filter(Publisher.name == a)
        res = (q.all())
        for result in res:
            print(f"{result[1]} | {result[2]} | {result[3]} | {result[4]}")
    else:
        print(f"Не найдено имя: {a}")




